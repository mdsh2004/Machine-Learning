# -*- coding: utf-8 -*-
"""Expt_3_Program_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DqNV7DeRd1pTaC1m6wJtkW01vgkje0pE
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import tkinter as tk
from tkinter import ttk

# Name: Neeraj Kumar
# UIN: 211P065

# Load the dataset from the CSV file
data = pd.read_csv('add.csv')

# Display the first few rows to verify the data
print(data.head())

# Define the features (x, y) and target variable (sum)
X = data[['x', 'y']]  # Features
y = data['sum']       # Target variable

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Print the model's performance on the training and testing sets
print(f"Training score: {model.score(X_train, y_train):.2f}")
print(f"Testing score: {model.score(X_test, y_test):.2f}")

# Make predictions for the test set
y_pred = model.predict(X_test)

# Define the Tkinter application class
class AdditionApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Addition Using Multiple Linear Regression By Mohammed Shaikh")
        self.create_widgets()

    def create_widgets(self):
        """Create and place widgets on the Tkinter window."""

        # Input for the first number
        ttk.Label(self.root, text="Number 1:").grid(column=0, row=0, padx=10, pady=10)
        self.num1_var = tk.DoubleVar()
        self.num1_entry = ttk.Entry(self.root, textvariable=self.num1_var)
        self.num1_entry.grid(column=1, row=0, padx=10, pady=10)

        # Input for the second number
        ttk.Label(self.root, text="Number 2:").grid(column=0, row=1, padx=10, pady=10)
        self.num2_var = tk.DoubleVar()
        self.num2_entry = ttk.Entry(self.root, textvariable=self.num2_var)
        self.num2_entry.grid(column=1, row=1, padx=10, pady=10)

        # Calculate button
        self.calc_button = ttk.Button(self.root, text="Calculate", command=self.calculate_sum)
        self.calc_button.grid(column=0, row=2, columnspan=2, pady=10)

        # Display the result
        self.result_var = tk.StringVar()
        ttk.Label(self.root, text="Result:").grid(column=0, row=3, padx=10, pady=10)
        self.result_label = ttk.Label(self.root, textvariable=self.result_var)
        self.result_label.grid(column=1, row=3, padx=10, pady=10)

    def calculate_sum(self):
        """Calculate the predicted sum based on the input numbers."""

        # Get input values from the user
        num1 = self.num1_var.get()
        num2 = self.num2_var.get()

        # Make a prediction using the trained model
        prediction = model.predict([[num1, num2]])[0]

        # Display the predicted result
        self.result_var.set(f"{prediction:.2f}")

# Create the Tkinter root window and run the application
root = tk.Tk()
app = AdditionApp(root)
root.mainloop()

